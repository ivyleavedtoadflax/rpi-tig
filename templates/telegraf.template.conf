# Telegraf Configuration

[global_tags]

[agent]
  interval = "1m"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "60s"
  flush_jitter = "3s"
  precision = ""
  debug = true
  quiet = false
  logfile = ""
  hostname = "hub.local"
  omit_hostname = false

[[outputs.influxdb]]
  urls = ["http://${INFLUXDB_HOST}:${INFLUXDB_PORT}"] # required
  database = "${DATABASE}" # required
  retention_policy = ""
  write_consistency = "any"
  timeout = "5s"

[[inputs.exec]]
   name_suffix = "_mycollector"
   data_format = "json"
   data_type = "integer"
   tag_keys = [
     "Night"
   ]

# Not currently used
#[[inputs.mqtt_consumer]]
#  servers = ["tcp://${MQTT_HOST}:${MQTT_PORT}"]
#  qos = 1
#  connection_timeout = "30s"
#  topics = [
#  	"${MQTT_TOPIC}"
#  ]
#  username = "${MQTT_USERNAME}"
#  password = "${MQTT_PASSWORD}"
#  data_format = "json"

# NOTE: this plugin forks the ping command. You may need to set capabilities
# # via setcap cap_net_raw+p /bin/ping. Note that this fires according to 
# agent.interval - so probably once every 10 seconds or so.
[[inputs.ping]]
    urls = [
        "${ROUTER_IP}",
        "${WEBSITE_0}",
        "${WEBSITE_1}"
        ]
 count = 5
 ping_interval = 1.0

# Stream a log file, like the tail -f command
[[inputs.tail]]
  files = ["/data/speedtest/log.json"]
  from_beginning = false
  pipe = false
  # watch_method = "inotify"
  data_format = "json"

[[inputs.cpu]]
    percpu = true
    totalcpu = true
    collect_cpu_time = false
    report_active = false
[[inputs.disk]]
    ignore_fs = ["tmpfs", "devtmpfs", "devfs"]
[[inputs.io]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.system]]
[[inputs.swap]]
[[inputs.netstat]]
[[inputs.processes]]
[[inputs.kernel]]
