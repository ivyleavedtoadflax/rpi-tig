# Telegraf Configuration

[global_tags]

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = true
  quiet = false
  logfile = ""
  hostname = "hub.local"
  omit_hostname = false

[[outputs.influxdb]]
  urls = ["http://${INFLUXDB_HOST}:${INFLUXDB_PORT}"] # required
  database = "${DATABASE}" # required
  retention_policy = ""
  write_consistency = "any"
  timeout = "5s"

[[outputs.file]]
  files = ["stdout"]
  data_format = "json"

[[inputs.exec]]
   name_suffix = "_mycollector"
   data_format = "json"
   data_type = "integer"
   tag_keys = [
     "Night"
   ]

[[inputs.tail]]
  files = ["/data/speedtest/speedtest.json"]
  from_beginning = false
  pipe = false
  data_format = "json"

[[inputs.mqtt_consumer]]
  servers = ["tcp://${MQTT_HOST}:${MQTT_PORT}"]
  qos = 1
  connection_timeout = "30s"
  topics = [
  	"${MQTT_TOPIC}"
  ]
  username = "${MQTT_USERNAME}"
  password = "${MQTT_PASSWORD}"
  data_format = "json"

# NOTE: this plugin forks the ping command. You may need to set capabilities
# # via setcap cap_net_raw+p /bin/ping
[[inputs.ping]]
 urls = ["${ROUTER_IP}", "${ELEC_LOCAL_IP}"] # required
 count = 10

# Stream a log file, like the tail -f command
[[inputs.tail]]
  files = ["/data/speedtest/speedtest.json"]
  from_beginning = false
  pipe = false
  # watch_method = "inotify"
  data_format = "json"

